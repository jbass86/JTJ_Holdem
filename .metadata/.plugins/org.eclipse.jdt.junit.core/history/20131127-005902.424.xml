<?xml version="1.0" encoding="UTF-8"?><testrun name="PokerHandTests" project="basic_poker_utils" tests="6" started="6" failures="1" errors="0" ignored="0">
  <testsuite name="jtj_holdem.tests.poker.PokerHandTests" time="3.647">
    <testcase name="testTwoPair1" classname="jtj_holdem.tests.poker.PokerHandTests" time="3.642">
      <failure>java.lang.AssertionError: expected:&lt;[Card: ACE of DIAMONDS, Card: ACE of HEARTS, Card: TEN of HEARTS, Card: TEN of SPADES]&gt; but was:&lt;[Card: TEN of SPADES, Card: TEN of HEARTS, Card: ACE of DIAMONDS, Card: ACE of HEARTS]&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at jtj_holdem.tests.poker.PokerHandTests.testTwoPair1(PokerHandTests.java:138)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testOnePair1" classname="jtj_holdem.tests.poker.PokerHandTests" time="0.001"/>
    <testcase name="testOnePair2" classname="jtj_holdem.tests.poker.PokerHandTests" time="0.0"/>
    <testcase name="testOnePair3" classname="jtj_holdem.tests.poker.PokerHandTests" time="0.001"/>
    <testcase name="testHighCard1" classname="jtj_holdem.tests.poker.PokerHandTests" time="0.001"/>
    <testcase name="testHighCard2" classname="jtj_holdem.tests.poker.PokerHandTests" time="0.001"/>
  </testsuite>
</testrun>
